{"version":3,"sources":["js/toggle.js","js/modal.js","js/modal-footer.js","js/films-api.js","json/genres.json","js/filmsRender.js","js/components/load-more-btn.js","index.js"],"names":["Theme","LIGHT","DARK","section","document","querySelector","checkBox","onChangeInput","event","currentTarget","checked","onCheckedInput","offCheckedInput","classList","add","remove","localStorage","setItem","currentThemeWebSite","savedTheme","getItem","addEventListener","showModal","refs","modalEl","closeBtnEl","bodyEl","modalContentEl","movieCardEl","preventDefault","onOpenModal","window","onClickEscape","code","removeEventListener","onCloseModal","onClickInNotModal","target","nodeName","openModalFooter","closeModalFooter","footerModal","toggleModal","toggle","API_KEY","BASE_URL","FilmsApiService","constructor","searchQuery","page","fetchFilms","url","fetch","then","r","json","results","incrementPage","fetchTrendingFilms","resetPage","query","newQuery","module","exports","id","name","filmsTemp","data","result","map","movie","poster_path","original_title","release_date","genre_ids","vote_average","movieItem","ids","genre","genres","push","length","join","makeStringOfGenres","slice","LoadMoreBtn","selector","hidden","getRefs","hide","button","label","spinner","enable","disabled","textContent","disable","show","searchForm","filmsContainer","loadMoreBtn","filmsApiService","renderTrending","appendFilmsMarkup","onSearch","e","value","alert","clearFilmsContainer","onLoadMore","films","insertAdjacentHTML","innerHTML","refsHeader","header","homeBtn","myLibraryBtn","myLibraryPageChange"],"mappings":"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","file":"src.82670aed.js","sourceRoot":"../src","sourcesContent":["const Theme = {\n    LIGHT: 'light-theme',\n    DARK: 'dark-theme',\n};\nconst section = document.querySelector('.section-hero')\n\n\n  const checkBox = document.querySelector('#theme-switch-toggle')\n  checkBox.addEventListener('change', onChangeInput)\n   \n  function onChangeInput(event) {\n    event.currentTarget.checked ? onCheckedInput() : offCheckedInput();\n  }\n  \n  function onCheckedInput() {\n    section.classList.add(Theme.DARK);\n    section.classList.remove(Theme.LIGHT);\n    localStorage.setItem('theme', Theme.DARK);\n    checkBox.checked = true;\n  }\n  \n  function offCheckedInput() {\n    section.classList.add(Theme.LIGHT);\n    section.classList.remove(Theme.DARK);\n    localStorage.setItem('theme', Theme.LIGHT);\n    checkBox.checked = false;\n  }\n  \n  function currentThemeWebSite() {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === Theme.LIGHT || savedTheme === null) {\n      offCheckedInput();\n      return;\n    }\n  \n    if (savedTheme === Theme.DARK) {\n      onCheckedInput();\n      return;\n    }\n  }\n  \n  currentThemeWebSite();","const refs = {\n  modalEl: document.querySelector('#modal__win'),\n  closeBtnEl: document.querySelector('button[data-action=\"close-modal\"]'),\n  bodyEl: document.querySelector('body'),\n\n  modalContentEl: document.querySelector('.js-modal__content'),\n  movieCardEl: document.querySelector('.js-movie-card'),\n};\n\nrefs.closeBtnEl.addEventListener('click', onCloseModal);\ndocument.addEventListener('click', onClickInNotModal);\n\nfunction showModal(event) {\n  event.preventDefault();\n\n  onOpenModal();\n}\n\nfunction onOpenModal() {\n  refs.modalEl.classList.add('is-open');\n  refs.bodyEl.classList.add('hidden');\n  window.addEventListener('keydown', onClickEscape);\n}\n\nfunction onClickEscape(event) {\n  if (event.code === 'Escape') {\n    refs.modalEl.classList.remove('is-open');\n    window.removeEventListener('keydown', onClickEscape);\n    onCloseModal();\n  }\n}\n\nfunction onCloseModal() {\n  refs.modalEl.classList.remove('is-open');\n  refs.bodyEl.classList.remove('hidden');\n}\n\nfunction onClickInNotModal(event) {\n  if (event.target.nodeName !== 'IMG') {\n    onCloseModal();\n  }\n}\n\nexport default showModal;\n","(() => {\n    const refs = {\n      openModalFooter: document.querySelector('[data-modal-footer-open]'),\n      closeModalFooter: document.querySelector('[data-modal-footer-close]'),\n      footerModal: document.querySelector('[data-modal-footer]'),\n    };\n  \n    refs.openModalFooter.addEventListener('click', toggleModal);\n    refs.closeModalFooter.addEventListener('click', toggleModal);\n  \n    function toggleModal(event) {\n      refs.footerModal.classList.toggle('is-hidden');\n      \n      event.preventDefault();\n    }\n})();\n  \n\n","const API_KEY = '6acc6746be8af475302214b8237b9c48';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport default class FilmsApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchFilms() {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.searchQuery}&page=${this.page}&include_adult=false`;\n\n    return fetch(url)\n      .then(r => r.json())\n      .then(({ results }) => {\n        this.incrementPage();\n        return results;\n      });\n  }\n\n  fetchTrendingFilms() {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n\n    return fetch(url)\n      .then(r => r.json())\n      .then(({ results }) => {\n        return results;\n      });\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","module.exports=[{id:28,name:\"Action\"},{id:12,name:\"Adventure\"},{id:16,name:\"Animation\"},{id:35,name:\"Comedy\"},{id:80,name:\"Crime\"},{id:99,name:\"Documentary\"},{id:18,name:\"Drama\"},{id:10751,name:\"Family\"},{id:14,name:\"Fantasy\"},{id:36,name:\"History\"},{id:27,name:\"Horror\"},{id:10402,name:\"Music\"},{id:9648,name:\"Mystery\"},{id:10749,name:\"Romance\"},{id:878,name:\"Science Fiction\"},{id:10770,name:\"TV Movie\"},{id:53,name:\"Thriller\"},{id:10752,name:\"War\"},{id:37,name:\"Western\"}];","import genres from '../json/genres.json';\n\nexport default function filmsTemp(data) {\n  const makeStringOfGenres = ids => {\n    let result=[]\n    for (const id of ids) {\n       for (const genre of genres){\n           if (genre.id===id){\n               result.push(genre.name)\n           }\n       }\n    }\n    if(result.length>2){\n        result.length=2\n    }\n    return result.join(', ')\n  };\n\n  let result = data\n    .map(movie=> {\n        const {poster_path, original_title, release_date, genre_ids, vote_average}= movie     \n        const movieItem = `<li class=\"film-item\">\n                  <a href=\"\" class=\"film-link\">\n                  <img src=\"https://image.tmdb.org/t/p/w342/${\n                    poster_path\n                  }\" alt=\"{{original_title}}\" class=\"film-img\">\n                  <p class=\"film-description\">${original_title}\n                  </p>\n                  <p class=\"film-description  film-gengers\">${makeStringOfGenres(genre_ids)},       \n          Other | ${release_date.slice(0, 4)} <span class=\"film-raiting\">${vote_average}<span>\n                  </p>\n                  </a>\n                  </li>`;\n      return movieItem;\n    })\n    .join('');\n  return result;\n}\n","export default class LoadMoreBtn {\n  constructor({ selector, hidden = false }) {\n    this.refs = this.getRefs(selector);\n    hidden && this.hide();\n  }\n\n  getRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector);\n    refs.label = refs.button.querySelector('.label');\n    refs.spinner = refs.button.querySelector('.spinner');\n    return refs;\n  }\n\n  enable() {\n    this.refs.button.disabled = false;\n    this.refs.label.textContent = 'Show more';\n    this.refs.spinner.classList.add('is-hidden');\n  }\n\n  disable() {\n    this.refs.button.disabled = true;\n    this.refs.label.textContent = 'Loading...';\n    this.refs.spinner.classList.remove('is-hidden');\n  }\n\n  show() {\n    this.refs.button.classList.remove('is-hidden');\n  }\n\n  hide() {\n    this.refs.button.classList.add('is-hidden');\n  }\n}\n","import './sass/main.scss';\n// import './js/modal.js';\nimport './js/toggle'\nimport showModal from './js/modal.js'; // импорт fn открытие/закрытие модалки\nimport './js/modal-footer';\nimport FilmsApiService from './js//films-api.js';\nimport filmsTemp from './js/filmsRender';\nimport LoadMoreBtn from './js/components/load-more-btn';\nconst refs = {\n  searchForm: document.querySelector('[data-index=\"search-form\"]'),\n  filmsContainer: document.querySelector('.film-list'),\n  //   loadMoreBtn: document.querySelector('[data-action=\"load-more\"]'),\n};\nconst loadMoreBtn = new LoadMoreBtn({\n  selector: '[data-action=\"load-more\"]',\n  hidden: true,\n});\nconst filmsApiService = new FilmsApiService();\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = '84867915c8b3aadc91d5efa8c22e1ab6';\n\nrefs.filmsContainer.addEventListener('click', showModal); // повесил с/с на ('.film-list') для проверки модалки\nrefs.searchForm.addEventListener('submit', onSearch);\nloadMoreBtn.refs.button.addEventListener('click', onLoadMore);\n\nfunction renderTrending() {\n  filmsApiService.fetchTrendingFilms().then(appendFilmsMarkup);\n}\nrenderTrending();\n\nfunction onSearch(e) {\n  e.preventDefault();\n  filmsApiService.query = e.currentTarget.query.value;\n  if (filmsApiService.query === '') {\n    return alert('Search result not successful. Enter the correct movie name and '); // тут нужен будет плагин нотификации\n  }\n  filmsApiService.resetPage();\n  loadMoreBtn.show();\n  loadMoreBtn.disable();\n  clearFilmsContainer();\n  onLoadMore();\n  showModal(); // fn для модалки\n}\n\nfunction onLoadMore() {\n  loadMoreBtn.disable();\n  filmsApiService.fetchFilms().then(appendFilmsMarkup).then(loadMoreBtn.enable());\n}\n\nfunction appendFilmsMarkup(films) {\n  refs.filmsContainer.insertAdjacentHTML('beforeend', filmsTemp(films));\n}\n\nfunction clearFilmsContainer() {\n  refs.filmsContainer.innerHTML = '';\n}\n\n// Это пока оставлю, возможно будем рендерить так, т.к. нужно будет через\n// id жанров получать жанры, и дату форматировать из YYYY-MM-DD to YYYY\n//Hello\n\n// function showCards(data) {\n//     listMovie.innerHTML =''\n//     data.forEach(movie => {\n//         const { title, poster_path} = movie\n//         const movieItem = document.createElement('li')\n//         movieItem.className = 'film-item'\n//         movieItem.innerHTML = `<a href=\"\" class=\"film-link\">\n//          <img src=\"${poster_path}\" alt=\"\" class=\"film-img\">\n//          <p class=\"film-description\"> ${title}\n//          </p><p class=\"film-description film-gengers\">project filmoteka<span class=\"film-raiting\">8.1</span></p></a>`\n//     });\n//     listMovie.appendChild(movieItem)\n// }\n// getBestMovie(RANDOM_MOVIE_URL)\nconst refsHeader = {\n    header: document.querySelector('[data-index=\"header\"]'),\n    homeBtn: document.querySelector('[data-index=\"home\"]'),\n    myLibraryBtn: document.querySelector('[data-index=\"mylibrary\"]')\n};\nfunction myLibraryPageChange() {\n    refsHeader.header.classList.remove('header-background-home');\n    refsHeader.header.classList.add('header-background-myLibrary')\n}\nrefsHeader.myLibraryBtn.addEventListener('click', (e) => {\n  e.preventDefault()\n  myLibraryPageChange()\n  refsHeader.myLibraryBtn.classList.add('current')\n    refsHeader.homeBtn.classList.remove('current')\n    refs.searchForm.innerHTML =`<button class=\"library-button active-btn\">\n                    WATCHED\n                </button>\n        \n                <button class=\"library-button inactive-btn\">\n                    QUEUE\n                </button>`\n  refs.filmsContainer.innerHTML=`НИЧЕГО НЕ НАЙДЕНО`\n})"]}